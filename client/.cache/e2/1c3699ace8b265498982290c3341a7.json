{"id":"node_modules/unique-selector/lib/getCombinations.js","dependencies":[{"name":"C:\\inspace\\inspace_\\client\\package.json","includedInParent":true,"mtime":1624573831328},{"name":"C:\\inspace\\inspace_\\client\\node_modules\\unique-selector\\package.json","includedInParent":true,"mtime":1624568922925},{"name":"C:\\inspace\\inspace_\\client\\node_modules\\unique-selector\\.babelrc","includedInParent":true,"mtime":1624568922925}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.getCombinations = getCombinations;\n/**\n * Recursively combinate items.\n * @param  { Array } result\n * @param  { Array } items\n * @param  { Array } data\n * @param  { Number } start\n * @param  { Number } end\n * @param  { Number } index\n * @param  { Number } k\n */\nfunction kCombinations(result, items, data, start, end, index, k) {\n    if (index === k) {\n        result.push(data.slice(0, index).join(''));\n        return;\n    }\n\n    for (var i = start; i <= end && end - i + 1 >= k - index; ++i) {\n        data[index] = items[i];\n        kCombinations(result, items, data, i + 1, end, index + 1, k);\n    }\n}\n\n/**\n * Returns all the possible selector combinations\n * @param  { Array } items\n * @param  { Number } k\n * @return { Array }\n */\nfunction getCombinations(items, k) {\n    var result = [],\n        n = items.length,\n        data = [];\n\n    for (var l = 1; l <= k; ++l) {\n        kCombinations(result, items, data, 0, n - 1, 0, l);\n    }\n\n    return result;\n}"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/unique-selector/lib/getCombinations.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/unique-selector/lib/getCombinations.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/unique-selector/lib/getCombinations.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/unique-selector/lib/getCombinations.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/unique-selector/lib/getCombinations.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/unique-selector/lib/getCombinations.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/unique-selector/lib/getCombinations.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/unique-selector/lib/getCombinations.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/unique-selector/lib/getCombinations.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/unique-selector/lib/getCombinations.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/unique-selector/lib/getCombinations.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/unique-selector/lib/getCombinations.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/unique-selector/lib/getCombinations.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/unique-selector/lib/getCombinations.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/unique-selector/lib/getCombinations.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/unique-selector/lib/getCombinations.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/unique-selector/lib/getCombinations.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/unique-selector/lib/getCombinations.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/unique-selector/lib/getCombinations.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/unique-selector/lib/getCombinations.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/unique-selector/lib/getCombinations.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/unique-selector/lib/getCombinations.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/unique-selector/lib/getCombinations.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/unique-selector/lib/getCombinations.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/unique-selector/lib/getCombinations.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/unique-selector/lib/getCombinations.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/unique-selector/lib/getCombinations.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/unique-selector/lib/getCombinations.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/unique-selector/lib/getCombinations.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/unique-selector/lib/getCombinations.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/unique-selector/lib/getCombinations.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/unique-selector/lib/getCombinations.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/unique-selector/lib/getCombinations.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/unique-selector/lib/getCombinations.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/unique-selector/lib/getCombinations.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/unique-selector/lib/getCombinations.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/unique-selector/lib/getCombinations.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/unique-selector/lib/getCombinations.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/unique-selector/lib/getCombinations.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/unique-selector/lib/getCombinations.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/unique-selector/lib/getCombinations.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/unique-selector/lib/getCombinations.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/unique-selector/lib/getCombinations.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/unique-selector/lib/getCombinations.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/unique-selector/lib/getCombinations.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}}],"sources":{"node_modules/unique-selector/lib/getCombinations.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.getCombinations = getCombinations;\n/**\n * Recursively combinate items.\n * @param  { Array } result\n * @param  { Array } items\n * @param  { Array } data\n * @param  { Number } start\n * @param  { Number } end\n * @param  { Number } index\n * @param  { Number } k\n */\nfunction kCombinations(result, items, data, start, end, index, k) {\n    if (index === k) {\n        result.push(data.slice(0, index).join(''));\n        return;\n    }\n\n    for (var i = start; i <= end && end - i + 1 >= k - index; ++i) {\n        data[index] = items[i];\n        kCombinations(result, items, data, i + 1, end, index + 1, k);\n    }\n}\n\n/**\n * Returns all the possible selector combinations\n * @param  { Array } items\n * @param  { Number } k\n * @return { Array }\n */\nfunction getCombinations(items, k) {\n    var result = [],\n        n = items.length,\n        data = [];\n\n    for (var l = 1; l <= k; ++l) {\n        kCombinations(result, items, data, 0, n - 1, 0, l);\n    }\n\n    return result;\n}"},"lineCount":45}},"error":null,"hash":"f9a66703b8e7e2721a86e5e30536de8e","cacheData":{"env":{}}}